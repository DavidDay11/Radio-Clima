<!DOCTYPE html>
<html lang="es">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Clima y Música - Córdoba</title>
    <style>
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }

        body {
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            min-height: 100vh;
            padding: 20px;
            color: #2d3748;
        }

        .container {
            max-width: 1200px;
            margin: 0 auto;
        }

        .section {
            background: rgba(255, 255, 255, 0.95);
            border-radius: 20px;
            padding: 30px;
            margin-bottom: 20px;
            box-shadow: 0 10px 40px rgba(0, 0, 0, 0.1);
            transition: transform 0.3s ease;
        }

        .clima-section {
            border: 3px solid #4299e1;
        }

        .music-section {
            border: 3px solid #9f7aea;
        }

        .header {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 25px;
            flex-wrap: wrap;
            gap: 15px;
        }

        .title {
            color: #4299e1;
            font-size: 24px;
            font-weight: 600;
        }

        .music-title {
            color: #9f7aea;
        }

        .current-time {
            color: #4299e1;
            font-size: 22px;
            font-weight: 500;
        }

        .moon-phase {
            color: #4299e1;
            font-size: 18px;
            display: flex;
            align-items: center;
            gap: 10px;
        }

        .current-weather {
            display: grid;
            grid-template-columns: auto 1fr;
            gap: 30px;
            align-items: center;
            margin-bottom: 30px;
        }

        .weather-icon-large {
            font-size: 80px;
            text-align: center;
        }

        .weather-main {
            display: flex;
            flex-direction: column;
            gap: 10px;
        }

        .temperature {
            font-size: 48px;
            font-weight: 300;
            color: #2d3748;
        }

        .temp-range {
            font-size: 18px;
            color: #718096;
        }

        .weather-description {
            font-size: 20px;
            color: #4a5568;
            text-transform: capitalize;
        }

        .weekly-forecast {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(120px, 1fr));
            gap: 15px;
        }

        .day-forecast {
            background: linear-gradient(135deg, #e0f2fe 0%, #ddd6fe 100%);
            border-radius: 15px;
            padding: 20px 15px;
            text-align: center;
            transition: transform 0.3s ease;
        }

        .day-forecast:hover {
            transform: translateY(-5px);
        }

        .day-name {
            font-weight: 600;
            color: #4a5568;
            margin-bottom: 10px;
            font-size: 16px;
        }

        .forecast-icon {
            font-size: 40px;
            margin: 10px 0;
        }

        .forecast-temps {
            font-size: 16px;
            color: #2d3748;
        }

        .max-temp {
            font-weight: 600;
        }

        .min-temp {
            color: #718096;
        }

        .music-player {
            display: flex;
            flex-direction: column;
            gap: 20px;
        }

        .player-controls {
            display: flex;
            align-items: center;
            gap: 20px;
            flex-wrap: wrap;
        }

        .btn {
            background: linear-gradient(135deg, #9f7aea 0%, #667eea 100%);
            color: white;
            border: none;
            padding: 12px 24px;
            border-radius: 25px;
            cursor: pointer;
            font-size: 16px;
            transition: all 0.3s ease;
            box-shadow: 0 4px 15px rgba(159, 122, 234, 0.3);
        }

        .btn:hover {
            transform: translateY(-2px);
            box-shadow: 0 6px 20px rgba(159, 122, 234, 0.4);
        }

        .btn:active {
            transform: translateY(0);
        }

        .volume-control {
            display: flex;
            align-items: center;
            gap: 15px;
            flex: 1;
            min-width: 200px;
        }

        .volume-slider {
            flex: 1;
            height: 8px;
            border-radius: 4px;
            background: linear-gradient(90deg, #e0f2fe 0%, #ddd6fe 100%);
            outline: none;
            -webkit-appearance: none;
        }

        .volume-slider::-webkit-slider-thumb {
            -webkit-appearance: none;
            width: 20px;
            height: 20px;
            border-radius: 50%;
            background: #9f7aea;
            cursor: pointer;
            box-shadow: 0 2px 10px rgba(159, 122, 234, 0.5);
        }

        .volume-slider::-moz-range-thumb {
            width: 20px;
            height: 20px;
            border-radius: 50%;
            background: #9f7aea;
            cursor: pointer;
            border: none;
            box-shadow: 0 2px 10px rgba(159, 122, 234, 0.5);
        }

        .volume-label {
            color: #4a5568;
            font-weight: 500;
            min-width: 60px;
        }

        .loading {
            text-align: center;
            color: #718096;
            padding: 20px;
        }

        @media (max-width: 768px) {
            .current-weather {
                grid-template-columns: 1fr;
                text-align: center;
            }

            .weekly-forecast {
                grid-template-columns: repeat(auto-fit, minmax(100px, 1fr));
            }

            .temperature {
                font-size: 36px;
            }

            .player-controls {
                flex-direction: column;
                align-items: stretch;
            }
        }

        .proyeccion-text {
            color: #4299e1;
            font-size: 18px;
            font-weight: 500;
            margin-bottom: 20px;
        }
    </style>
</head>
<body>
    <div class="container">
        <div class="section clima-section">
            <div class="header">
                <div class="title">CLIMA</div>
                <div class="current-time" id="currentTime">--:--:--</div>
                <div class="moon-phase" id="moonPhase">🌙 --</div>
            </div>

            <div class="current-weather" id="currentWeather">
                <div class="loading">Cargando datos del clima...</div>
            </div>

            <div class="proyeccion-text">proyección semanal de clima</div>
            
            <div class="weekly-forecast" id="weeklyForecast">
                <div class="loading">Cargando pronóstico...</div>
            </div>
        </div>

        <div class="section music-section">
            <div class="header">
                <div class="title music-title">reproductor de música</div>
            </div>

            <div class="music-player">
                <audio id="audioPlayer" preload="none">
                    <source src="https://playerservices.streamtheworld.com/api/livestream-redirect/cadenaheat.mp3?dist=c3-web" type="audio/mpeg">
                </audio>

                <div class="player-controls">
                    <button class="btn" id="playPauseBtn">▶ Play</button>
                    <button class="btn" id="refreshBtn">🔄 Volver a En Vivo</button>
                    <div class="volume-control">
                        <span class="volume-label">🔊 Volumen:</span>
                        <input type="range" id="volumeSlider" class="volume-slider" min="0" max="100" value="70">
                        <span class="volume-label" id="volumeValue">70%</span>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <script>
        const CORDOBA = { lat: -31.4201, lon: -64.1888 };
        const API_KEY = 'd4f21e1a05e4a72937ad728952155b17'; // Placeholder - usar tu propia API key de OpenWeatherMap
        
        let audio = document.getElementById('audioPlayer');
        let isPlaying = false;
        let animationInterval;

        // Reloj en tiempo real
        function updateClock() {
            const now = new Date();
            const options = { 
                timeZone: 'America/Argentina/Cordoba',
                hour: '2-digit',
                minute: '2-digit',
                second: '2-digit',
                hour12: false
            };
            const timeString = now.toLocaleString('es-AR', options);
            document.getElementById('currentTime').textContent = timeString;
        }

        // Calcular fase lunar
        function getMoonPhase() {
            const date = new Date();
            let year = date.getFullYear();
            let month = date.getMonth() + 1;
            const day = date.getDate();
            
            let c = 0, e = 0, jd = 0, b = 0;
            
            if (month < 3) {
                year--;
                month += 12;
            }
            
            ++month;
            c = 365.25 * year;
            e = 30.6 * month;
            jd = c + e + day - 694039.09;
            jd /= 29.5305882;
            b = parseInt(jd);
            jd -= b;
            b = Math.round(jd * 8);
            
            if (b >= 8) b = 0;
            
            const phases = [
                { name: '🌑 Luna Nueva', icon: '🌑' },
                { name: '🌒 Creciente', icon: '🌒' },
                { name: '🌓 Cuarto Creciente', icon: '🌓' },
                { name: '🌔 Creciente Gibosa', icon: '🌔' },
                { name: '🌕 Luna Llena', icon: '🌕' },
                { name: '🌖 Menguante Gibosa', icon: '🌖' },
                { name: '🌗 Cuarto Menguante', icon: '🌗' },
                { name: '🌘 Menguante', icon: '🌘' }
            ];
            
            return phases[b].name;
        }

        // Obtener icono del clima
        function getWeatherIcon(code, isDay = true) {
            const icons = {
                '01d': '☀️', '01n': '🌙',
                '02d': '⛅', '02n': '☁️',
                '03d': '☁️', '03n': '☁️',
                '04d': '☁️', '04n': '☁️',
                '09d': '🌧️', '09n': '🌧️',
                '10d': '🌦️', '10n': '🌧️',
                '11d': '⛈️', '11n': '⛈️',
                '13d': '❄️', '13n': '❄️',
                '50d': '🌫️', '50n': '🌫️'
            };
            return icons[code] || '🌤️';
        }

        // Obtener clima actual
        async function getCurrentWeather() {
            try {
                const response = await fetch(
                    `https://api.openweathermap.org/data/2.5/weather?lat=${CORDOBA.lat}&lon=${CORDOBA.lon}&units=metric&lang=es&appid=${API_KEY}`
                );
                const data = await response.json();
                
                const html = `
                    <div class="weather-icon-large">${getWeatherIcon(data.weather[0].icon)}</div>
                    <div class="weather-main">
                        <div class="temperature">${Math.round(data.main.temp)}°C</div>
                        <div class="weather-description">${data.weather[0].description}</div>
                        <div class="temp-range">
                            Máx: ${Math.round(data.main.temp_max)}° / Mín: ${Math.round(data.main.temp_min)}°
                        </div>
                    </div>
                `;
                
                document.getElementById('currentWeather').innerHTML = html;
            } catch (error) {
                console.error('Error al obtener clima actual:', error);
                document.getElementById('currentWeather').innerHTML = 
                    '<div class="loading">Error al cargar el clima. Usando API demo.</div>';
                loadDemoWeather();
            }
        }

        // Obtener pronóstico semanal
        async function getWeeklyForecast() {
            try {
                const response = await fetch(
                    `https://api.openweathermap.org/data/2.5/forecast?lat=${CORDOBA.lat}&lon=${CORDOBA.lon}&units=metric&lang=es&appid=${API_KEY}`
                );
                const data = await response.json();
                
                const dailyData = {};
                data.list.forEach(item => {
                    const date = new Date(item.dt * 1000);
                    const dayName = date.toLocaleDateString('es-AR', { weekday: 'long' });
                    
                    if (!dailyData[dayName]) {
                        dailyData[dayName] = {
                            temps: [],
                            icon: item.weather[0].icon,
                            day: dayName
                        };
                    }
                    dailyData[dayName].temps.push(item.main.temp);
                });
                
                const days = Object.values(dailyData).slice(0, 7);
                let html = '';
                
                days.forEach(day => {
                    const maxTemp = Math.round(Math.max(...day.temps));
                    const minTemp = Math.round(Math.min(...day.temps));
                    
                    html += `
                        <div class="day-forecast">
                            <div class="day-name">${day.day}</div>
                            <div class="forecast-icon">${getWeatherIcon(day.icon)}</div>
                            <div class="forecast-temps">
                                <span class="max-temp">${maxTemp}°</span> / 
                                <span class="min-temp">${minTemp}°</span>
                            </div>
                        </div>
                    `;
                });
                
                document.getElementById('weeklyForecast').innerHTML = html;
            } catch (error) {
                console.error('Error al obtener pronóstico:', error);
                loadDemoForecast();
            }
        }

        // Datos demo si falla la API
        function loadDemoWeather() {
            const html = `
                <div class="weather-icon-large">☀️</div>
                <div class="weather-main">
                    <div class="temperature">24°C</div>
                    <div class="weather-description">Soleado</div>
                    <div class="temp-range">Máx: 28° / Mín: 18°</div>
                </div>
            `;
            document.getElementById('currentWeather').innerHTML = html;
        }

        function loadDemoForecast() {
            const days = ['lunes', 'martes', 'miércoles', 'jueves', 'viernes', 'sábado', 'domingo'];
            const icons = ['☀️', '⛅', '☁️', '🌦️', '☀️', '⛅', '☀️'];
            const maxTemps = [28, 26, 24, 22, 27, 29, 30];
            const minTemps = [18, 17, 16, 15, 19, 20, 21];
            
            let html = '';
            days.forEach((day, i) => {
                html += `
                    <div class="day-forecast">
                        <div class="day-name">${day}</div>
                        <div class="forecast-icon">${icons[i]}</div>
                        <div class="forecast-temps">
                            <span class="max-temp">${maxTemps[i]}°</span> / 
                            <span class="min-temp">${minTemps[i]}°</span>
                        </div>
                    </div>
                `;
            });
            document.getElementById('weeklyForecast').innerHTML = html;
        }

        // Control del reproductor
        document.getElementById('playPauseBtn').addEventListener('click', function() {
            if (isPlaying) {
                audio.pause();
                this.textContent = '▶ Play';
                isPlaying = false;
            } else {
                audio.play();
                this.textContent = '⏸ Pausa';
                isPlaying = true;
            }
        });

        document.getElementById('refreshBtn').addEventListener('click', function() {
            audio.load();
            audio.play();
            document.getElementById('playPauseBtn').textContent = '⏸ Pausa';
            isPlaying = true;
        });

        document.getElementById('volumeSlider').addEventListener('input', function() {
            audio.volume = this.value / 100;
            document.getElementById('volumeValue').textContent = this.value + '%';
        });

        // Animación anti burn-in
        function animateElements() {
            const sections = document.querySelectorAll('.section');
            sections.forEach(section => {
                const randomX = Math.floor(Math.random() * 5) - 2;
                const randomY = Math.floor(Math.random() * 5) - 2;
                section.style.transform = `translate(${randomX}px, ${randomY}px)`;
            });
        }

        // Inicialización
        audio.volume = 0.7;
        updateClock();
        setInterval(updateClock, 1000);
        
        document.getElementById('moonPhase').textContent = getMoonPhase();
        
        getCurrentWeather();
        getWeeklyForecast();
        
        setInterval(() => {
            getCurrentWeather();
            getWeeklyForecast();
        }, 600000); // Actualizar cada 10 minutos
        
        // Animación cada 30 segundos
        setInterval(animateElements, 30000);
    </script>
</body>
</html>